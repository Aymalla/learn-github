name: build
run-name: Build triggered by ${{ github.actor }}_${{ github.event_name }}_${{ github.ref }}
description: |
  This is a workflow for testing out GitHub Actions.
  It will run on every push to the main branch and on pull requests.
  It will also run on merge groups
on:
  workflow_dispatch:
  workflow_call:
  pull_request:
    branches:
      - main
  merge_group:
  push:
    branches:
      - main
      - dev
      - feature/*
    paths:
      - 'src/**'
      - '!docs/**'
      - '.github/**'


concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: false

jobs:
  prerequisites:
    runs-on: ubuntu-latest
    steps:
      - name: "Check out repository code (Workflow version: Main)"
        uses: actions/checkout@v4
      - name: "🚀 Displaying GitHub Context Variables."
        id: get_context
        uses: ./.github/actions/github-context
        with:
          message: "🔑 Displaying GitHub Context Variables"
      - name: "Display Context Message"
        run: |
          echo "🔑 The message from the previous step is: ${{ steps.get_context.outputs.message }}"

  build:
    runs-on: ubuntu-latest
    needs: [prerequisites]
    environment: DEV
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: | 
          echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
          echo "🖥️ The workflow is now ready to test your code on the runner."
          ls ${{ github.workspace }}
      - run: echo "🍏 This job's status is ${{ job.status }}."

      - name: 🔧 Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: 🫙Cache NuGet
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/web-app/*.csproj') }}

      - name: 🔄 Restore dependencies
        working-directory: ${{ github.workspace }}/src/web-app
        run: |
          echo "🔄 Restoring dependencies for the .NET project."
          dotnet restore

      - name: 🔨 Build Application
        working-directory: ${{ github.workspace }}/src/web-app
        run: |
          echo "🔨 Building the .NET project."
          dotnet build --no-restore --configuration Release

      - name: 🔍 Run Tests
        working-directory: ${{ github.workspace }}/src/web-app
        run: |
          echo "🔍 Running tests"
          dotnet test --no-build --configuration Release --verbosity normal

      - name: 📢 Publish Application
        working-directory: ${{ github.workspace }}/src/web-app
        run: dotnet publish --no-build --configuration Release --output ./publish

      - name: ⬆️ Upload Build Artifacts - GitHub
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: ./src/web-app/publish
          retention-days: 5

      - name: 🗜️ Zip Folder
        run: |
          # name of the zip file can be replaced with hash of the commit to support versioning
          rm -rf web-app-build-artifact.zip 
          zip -r web-app-build-artifact.zip ${{ github.workspace }}/src/web-app/publish

      - name: 📦 Upload Build Artifact - Azure Storage
        uses: bacongobbler/azure-blob-storage-upload@main
        with:
          connection_string : ${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}
          source_dir: '.'
          container_name: artifacts
          extra_args: '--pattern *.zip'
          overwrite: 'true'


  release:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
    
      - name: 🔧 Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: ⏬ Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: ./publish

      - name: 📦 Check artifact
        run: |
          echo "📦 Checking the downloaded artifacts."
          ls -la ./publish

      - name: ⏬ Download Blob from Azure Storage
        uses: armanrahman22/azblob-download-action@v0.0.4
        with:
          connection-string: ${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}
          container-name: "artifacts"
          blob-name: "web-app-build-artifact.zip"
          download-path: "."

      - name: 📦 Unzip Artifact
        run: |
          echo "📦 Unzipping the downloaded artifact."
          unzip -o web-app-build-artifact.zip -d ./web-app-publish

      - name: 📦 Check Unzipped Artifact
        run: |
          echo "📦 Checking the contents of the unzipped artifact."
          ls -la ./web-app-publish

